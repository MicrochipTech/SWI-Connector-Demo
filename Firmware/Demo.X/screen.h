/*******************************************************************************
FileName:			screens.h
Processor:			PIC16F18875
Compiler:			XC8 v2.05
IDE:				MPLABX IDE v5.20
Author:				Erik Fasnacht
Company:			Microchip Technology, Inc.

Summary:			Header file for screens.c
    
Description:		Header file for screens.c
*******************************************************************************/
/*******************************************************************************
    (c) 2019 Microchip Technology Inc. and its subsidiaries.

    Subject to your compliance with these terms, you may use Microchip
    software and any derivatives exclusively with Microchip products. It is
    your responsibility to comply with third party license terms applicable to
    your use of third party software (including open source software) that may
    accompany Microchip software.

    THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS". NO WARRANTIES, WHETHER
    EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE, INCLUDING ANY
    IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY, AND FITNESS
    FOR A PARTICULAR PURPOSE.

    IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT, SPECIAL, PUNITIVE,
    INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF ANY KIND
    WHATSOEVER RELATED TO THE SOFTWARE, HOWEVER CAUSED, EVEN IF MICROCHIP
    HAS BEEN ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE. TO
    THE FULLEST EXTENT ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL
    CLAIMS IN ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT
    OF FEES, IF ANY, THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS
    SOFTWARE.
*******************************************************************************/

#ifndef SCREEN_H
#define	SCREEN_H

//******************************************************************************
//******************************************************************************
//Include Declarations
#include "mcc_generated_files/mcc.h"
#include "mcc_generated_files/oledC_colors.h"
#include "mcc_generated_files/oledC_shapeHandler.h"
#include "mcc_generated_files/oledC_shapes.h"

#ifdef	__cplusplus
extern "C" {
#endif

#ifdef	__cplusplus
}
#endif

//******************************************************************************
//******************************************************************************
//OLED Function Declarations
void oledC_startup(void);
void oledC_read(void);
void oledC_write(void);
void oledC_correct(void);
void oledC_incorrect(void);
void oledC_clear(void);
void oledC_encrypt(void);

//******************************************************************************
//******************************************************************************               
//Variable Declarations
    extern uint16_t count;              //global variable for connector count
    static uint16_t background_color;    
    static const char mchp[] = "MICROCHIP";
    static const char swi[] = "SWI DEMO";
    static const char read[] = "EEPROM READ";
    static const char mcu[] = "MCU";
    static const char write[] = "EEPROM WRITE";
    static const char genuine[] = "GENUINE";
    static const char cntPrint[] = "Count = ";  
    static const char fake[] = "INVALID";
    static const char erase[] = "EEPROM ERASE";
    static const char snRead[] = "SERIAL # READ";
    static const char encrypt[] = "DATA ENCRYPTION"; 
    static const char rstCount[] = "RESETTING COUNT"; 

//******************************************************************************
//******************************************************************************               
//bitmap declarations
    
static const uint32_t logo[] = 
    { 
        0b11111111111000000000011111111111,
        0b11111111100000000000001111111111,
        0b11111111000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111100000000000000000011111111,
        0b11111000000010000000100011111111,
        0b11111000000110000001100001111111,
        0b11110000001111000011110000111111,
        0b11110000001111100011111000111111,
        0b11110000000111100001111000011111,
        0b11110000000111110001111100001111,
        0b11110001000011110000111110001111,
        0b11110001100011111000111110001111,
        0b11110011110001111100011111001111,
        0b11110111110000111100001111001111,
        0b11111111100000111100001111111111,
        0b11111111100000011100000111111111,
        0b11111111000000011000000011111111,
        0b11111110000000000000000011111111,
        0b11111110000000000000000001111111,
        0b11111110000000000000000001111111,
        0b11111111100000000000000111111111,
        0b11111111111000000000011111111111
    };

    static const uint32_t copyright[] = 
    { 
        0b11111111111111111111111101111111
    };  

    static const uint32_t body1[] = 
    { 
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111,
        0b11111110000000000000000111111111
    }; 
    
    static const uint32_t body2[] = 
    { 
        0b11111111100000000000011111111111,
        0b11111111100000000000011111111111,
        0b11111111100000000000011111111111,
        0b11111111100000000000011111111111,
        0b11111111100000000000011111111111,
        0b11111111100000000000011111111111,
        0b11111111100000000000011111111111,
        0b11111111100000000000011111111111,
        0b11111111100000000000011111111111,
        0b11111111100000000000011111111111,
        0b11111111100000000000011111111111,
        0b11111111100000000000011111111111,
        0b11111111100000000000011111111111
    };
    
    static const uint32_t arrowto[] = 
    { 
        0b11111111111111001111111111111111,
        0b11111111111111001111111111111111,
        0b11111111111100000011111111111111,
        0b11111111111110000111111111111111,
        0b11111111111111001111111111111111
    }; 
    
    static const uint32_t arrowfrom[] = 
    { 
        0b11111111111111001111111111111111,
        0b11111111111110000111111111111111,
        0b11111111111100000011111111111111,
        0b11111111111111001111111111111111,
        0b11111111111111001111111111111111
    };
    
    static const uint32_t pin1[] = 
    { 
        0b11111111001100110011001111111111,
        0b11111111001100110011001111111111,
        0b11111111111111111111111111111111,
        0b11111001111111111111111001111111,
        0b11111001111111111111111001111111,
        0b11111111111111111111111111111111,
        0b11111001111111111111111001111111,
        0b11111001111111111111111001111111,
        0b11111111111111111111111111111111,
        0b11111001111111111111111001111111,
        0b11111001111111111111111001111111,
        0b11111111111111111111111111111111,
        0b11111001111111111111111001111111,
        0b11111001111111111111111001111111,
        0b11111111111111111111111111111111,
        0b11111001111111111111111001111111,
        0b11111001111111111111111001111111,
        0b11111111111111111111111111111111,
        0b11111111001100110011001111111111,
        0b11111111001100110011001111111111
    };
    
    static const uint32_t pin2[] = 
    { 
        0b11111111111000110001111111111111,
        0b11111111111000110001111111111111,
        0b11111111111000110001111111111111,
        0b11111111111000110001111111111111,
        0b11111111111000110001111111111111,
        0b11111111111000110001111111111111,
        0b11111111111000110001111111111111,
        0b11111111111000110001111111111111,
        0b11111111111000110001111111111111,
        0b11111111111000110001111111111111,
        0b11111111111000110011111111111111
    };
    
    static const uint32_t check[] = 
    { 
        0b11111111111111111111111111000111,
        0b11111111111111111111111110001111,
        0b11111111111111111111111110001111,
        0b11111111111111111111111100011111,
        0b11111111111111111111111100011111,
        0b11111111111111111111111000111111,
        0b11111111111111111111111000111111,
        0b11111111111111111111110001111111,
        0b11111111111111111111110001111111,
        0b11111111111111111111100011111111,
        0b11111111111111111111100011111111,
        0b11111111111111111111000111111111,
        0b11111111111111111111000111111111,
        0b11111111111111111110001111111111,
        0b11111111111111111110001111111111,
        0b11111000111111111100011111111111,
        0b11111000111111111100011111111111,
        0b11111100011111111000111111111111,
        0b11111100011111111000111111111111,
        0b11111110001111110001111111111111,
        0b11111110001111110001111111111111,
        0b11111111000111100011111111111111,
        0b11111111000111100011111111111111,
        0b11111111100011000111111111111111,
        0b11111111100010001111111111111111,
        0b11111111110000001111111111111111,
        0b11111111110000011111111111111111,
        0b11111111111000011111111111111111
    };
    
    static const uint32_t x[] = 
    { 
        0b00011111111111111111111111111000,
        0b00001111111111111111111111110000,
        0b10000111111111111111111111100001,
        0b11000011111111111111111111000011,
        0b11100001111111111111111110000111,
        0b11110000111111111111111100001111,
        0b11111000011111111111111000011111,
        0b11111100001111111111110000111111,
        0b11111110000111111111100001111111,
        0b11111111000011111111000011111111,
        0b11111111100001111110000111111111,
        0b11111111110000111100001111111111,
        0b11111111111000011000011111111111,
        0b11111111111100000000111111111111,
        0b11111111111110000001111111111111,
        0b11111111111111000011111111111111,
        0b11111111111111000011111111111111,
        0b11111111111110000001111111111111,
        0b11111111111100000000111111111111,
        0b11111111111000011000011111111111,
        0b11111111110000111100001111111111,
        0b11111111100001111110000111111111,
        0b11111111000011111111000011111111,
        0b11111110000111111111100001111111,
        0b11111100001111111111110000111111,
        0b11111000011111111111111000011111,
        0b11110000111111111111111100001111,
        0b11100001111111111111111110000111,
        0b11000011111111111111111111000011,
        0b10000111111111111111111111100001,
        0b00001111111111111111111111110000,
        0b00011111111111111111111111111000
    };

#endif	/* SCREEN_H */

